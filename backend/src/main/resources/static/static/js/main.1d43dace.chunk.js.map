{"version":3,"sources":["service/todo-api-service.js","service/todo-service.js","components/Navbar.js","components/Header.js","components/TodoActions.js","components/TodoItem.js","components/Board.js","components/BoardsOverview.js","components/NewTodo.js","components/PageLayout.js","pages/Homepage.js","components/TodoDetails.js","pages/DetailsPage.js","pages/BoardPage.js","components/TodoForm.js","hooks/useEditForm.js","pages/EditPage.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js"],"names":["getAllTodos","axios","get","then","response","data","getTodoById","id","nextTodoStatus","OPEN","IN_PROGRESS","slugStatus","todo","doing","done","statusTitle","DONE","Navbar","Nav","exact","to","styled","nav","Header","Heading","h1","TodoActions","onAdvance","onDelete","Wrapper","ButtonComp","adv","onClick","del","section","button","props","TodoItem","TodoItemStyleComp","description","Board","className","title","todos","List","map","ul","BoardsOverview","openTodos","filter","status","inProgressTodos","doneTodos","main","NewTodo","onAdd","useState","setDescription","onSubmit","event","preventDefault","type","value","onChange","target","form","div","Homepage","advanceTodo","removeTodo","createNewTodo","PageLayout","TodoDetails","DetailsPage","useParams","setTodo","useEffect","fetchedTodo","catch","error","console","BoardPage","statusSlug","filteredTodos","statusToTitle","BoardStyled","undefined","TodoForm","onSave","formData","setFormData","history","useHistory","handleSubmit","updatedTodo","push","handleChange","name","resetForm","useEditForm","EditPage","App","setTodos","put","putTodo","delete","deleteTodo","path","post","postTodo","putUpdatedTodo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createGlobalStyle","ReactDOM","render","StrictMode","GlobalStyle","document","getElementById"],"mappings":"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","file":"static/js/main.1d43dace.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const getAllTodos = () =>\r\n  axios.get('/api/todo').then(response => response.data)\r\n\r\nexport const getTodoById = id =>\r\n  axios.get(`/api/todo/${id}`).then(response => response.data)\r\n\r\nexport const postTodo = description =>\r\n  axios.post('/api/todo', { description: description, status: 'OPEN' })\r\n\r\nexport const putTodo = todo => axios.put(`/api/todo/${todo.id}`, todo)\r\n\r\nexport const putUpdatedTodo = todo =>\r\n  axios.put(`/api/todo/${todo.id}/update`, todo)\r\n\r\nexport const deleteTodo = id => axios.delete(`/api/todo/${id}`)\r\n","const nextTodoStatus = {\r\n  OPEN: 'IN_PROGRESS',\r\n  IN_PROGRESS: 'DONE',\r\n}\r\n\r\nexport const nextStatus = status => nextTodoStatus[status]\r\n\r\nconst slugStatus = {\r\n  todo: 'OPEN',\r\n  doing: 'IN_PROGRESS',\r\n  done: 'DONE',\r\n}\r\n\r\nexport const slugToStatus = slug => slugStatus[slug]\r\n\r\nconst statusTitle = {\r\n  OPEN: 'Todo',\r\n  IN_PROGRESS: 'Doing',\r\n  DONE: 'Done',\r\n}\r\n\r\nexport const statusToTitle = status => statusTitle[status]\r\n","import { NavLink } from 'react-router-dom'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <Nav>\r\n      <NavLink exact to=\"/\">\r\n        Home\r\n      </NavLink>\r\n      <NavLink to=\"/board/todo\">Todo</NavLink>\r\n      <NavLink to=\"/board/doing\">Doing</NavLink>\r\n      <NavLink to=\"/board/done\">Done</NavLink>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n\r\n  a {\r\n    padding: 4px;\r\n    text-decoration: none;\r\n    color: hotpink;\r\n  }\r\n\r\n  a.active {\r\n    background: hotpink;\r\n    color: white;\r\n  }\r\n`\r\n","import Navbar from './Navbar'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <Heading>Super Kanban</Heading>\r\n      <Navbar />\r\n    </header>\r\n  )\r\n}\r\n\r\nconst Heading = styled.h1`\r\n  margin: 0;\r\n  padding: 12px;\r\n`\r\n","import { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nTodoActions.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  onAdvance: PropTypes.func,\r\n  onDelete: PropTypes.func,\r\n}\r\n\r\nexport default function TodoActions({ todo, onAdvance, onDelete }) {\r\n  return (\r\n    <Wrapper>\r\n      <Link to={`/details/${todo.id}`}>Details</Link>\r\n      <Link to={`/edit/${todo.id}`}>Edit</Link>\r\n      {onAdvance && (\r\n        <ButtonComp adv onClick={() => onAdvance(todo)}>\r\n          Advance\r\n        </ButtonComp>\r\n      )}\r\n      {onDelete && (\r\n        <ButtonComp del onClick={() => onDelete(todo.id)}>\r\n          Delete\r\n        </ButtonComp>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst ButtonComp = styled.button`\r\n  ${props => (props.del ? 'background-color: lightcoral;' : '')}\r\n  ${props => (props.adv ? 'background-color: lightblue;' : '')}\r\n`\r\n","import PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\nimport TodoActions from './TodoActions'\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    status: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onAdvance: PropTypes.func,\r\n  onDelete: PropTypes.func,\r\n}\r\n\r\nexport default function TodoItem({ todo, onAdvance, onDelete }) {\r\n  return (\r\n    <TodoItemStyleComp>\r\n      <h3>{todo.description}</h3>\r\n      <TodoActions todo={todo} onAdvance={onAdvance} onDelete={onDelete} />\r\n    </TodoItemStyleComp>\r\n  )\r\n}\r\n\r\nconst TodoItemStyleComp = styled.section`\r\n  border: 1px solid #333;\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  box-shadow: 1px 2px 8px #666;\r\n`\r\n","import TodoItem from './TodoItem'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nBoard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      description: PropTypes.string.isRequired,\r\n      status: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onAdvance: PropTypes.func,\r\n  onDelete: PropTypes.func,\r\n}\r\n\r\nexport default function Board({\r\n  className,\r\n  title,\r\n  todos,\r\n  onAdvance,\r\n  onDelete,\r\n}) {\r\n  return (\r\n    <section className={className}>\r\n      <h2>{title}</h2>\r\n      <List>\r\n        {todos.map(todo => {\r\n          return (\r\n            <li key={todo.id}>\r\n              <TodoItem todo={todo} onAdvance={onAdvance} onDelete={onDelete} />\r\n            </li>\r\n          )\r\n        })}\r\n      </List>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: grid;\r\n  grid-gap: 12px;\r\n`\r\n","import Board from './Board'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nBoardsOverview.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      description: PropTypes.string.isRequired,\r\n      status: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onAdvance: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default function BoardsOverview({ todos, onAdvance, onDelete }) {\r\n  const openTodos = todos.filter(todo => todo.status === 'OPEN')\r\n  const inProgressTodos = todos.filter(todo => todo.status === 'IN_PROGRESS')\r\n  const doneTodos = todos.filter(todo => todo.status === 'DONE')\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Board title=\"Todo\" todos={openTodos} onAdvance={onAdvance} />\r\n      <Board title=\"Doing\" todos={inProgressTodos} onAdvance={onAdvance} />\r\n      <Board title=\"Done\" todos={doneTodos} onDelete={onDelete} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  overflow-y: scroll;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  grid-gap: 12px;\r\n  padding: 0 12px;\r\n`\r\n","import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components/macro'\r\n\r\nNewTodo.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default function NewTodo({ onAdd }) {\r\n  const [description, setDescription] = useState('')\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    if (description) {\r\n      onAdd(description).then(() => setDescription(''))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={description}\r\n        onChange={event => setDescription(event.target.value)}\r\n      />\r\n      <button>Add</button>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr min-content;\r\n  padding: 12px;\r\n`\r\n","import styled from 'styled-components/macro'\r\n\r\nexport default styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-rows: min-content 1fr min-content;\r\n`\r\n","import Header from '../components/Header'\r\nimport BoardsOverview from '../components/BoardsOverview'\r\nimport NewTodo from '../components/NewTodo'\r\nimport PageLayout from '../components/PageLayout'\r\n\r\nexport default function Homepage({\r\n  todos,\r\n  advanceTodo,\r\n  removeTodo,\r\n  createNewTodo,\r\n}) {\r\n  return (\r\n    <PageLayout>\r\n      <Header />\r\n      <BoardsOverview\r\n        todos={todos}\r\n        onAdvance={advanceTodo}\r\n        onDelete={removeTodo}\r\n      />\r\n      <NewTodo onAdd={createNewTodo} />\r\n    </PageLayout>\r\n  )\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport default function TodoDetails({ description, status }) {\r\n  return (\r\n    <Wrapper>\r\n      <h2>{description}</h2>\r\n      <p>Status: {status}</p>\r\n      <Link to=\"/\">Back</Link>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 12px;\r\n`\r\n","import { useParams } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport PageLayout from '../components/PageLayout'\r\nimport Header from '../components/Header'\r\nimport TodoDetails from '../components/TodoDetails'\r\nimport { getTodoById } from '../service/todo-api-service'\r\n\r\nexport default function DetailsPage() {\r\n  const { id } = useParams()\r\n\r\n  const [todo, setTodo] = useState()\r\n\r\n  useEffect(() => {\r\n    getTodoById(id)\r\n      .then(fetchedTodo => setTodo(fetchedTodo))\r\n      .catch(error => console.error(error))\r\n  }, [id])\r\n\r\n  if (!todo) {\r\n    return <p>loading</p>\r\n  }\r\n\r\n  return (\r\n    <PageLayout>\r\n      <Header />\r\n      <TodoDetails {...todo} />\r\n    </PageLayout>\r\n  )\r\n}\r\n","import { useParams } from 'react-router-dom'\r\nimport Header from '../components/Header'\r\nimport Board from '../components/Board'\r\nimport PropTypes from 'prop-types'\r\nimport { slugToStatus, statusToTitle } from '../service/todo-service'\r\nimport PageLayout from '../components/PageLayout'\r\nimport styled from 'styled-components/macro'\r\n\r\nBoardPage.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  onAdvance: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default function BoardPage({ todos, onAdvance, onDelete }) {\r\n  const { statusSlug } = useParams()\r\n\r\n  const status = slugToStatus(statusSlug)\r\n\r\n  const filteredTodos = todos.filter(todo => todo.status === status)\r\n\r\n  const title = statusToTitle(status)\r\n\r\n  return (\r\n    <PageLayout>\r\n      <Header />\r\n      <BoardStyled\r\n        title={title}\r\n        todos={filteredTodos}\r\n        onAdvance={status !== 'DONE' ? onAdvance : undefined}\r\n        onDelete={status === 'DONE' ? onDelete : undefined}\r\n      />\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nconst BoardStyled = styled(Board)`\r\n  padding: 0 12px;\r\n`\r\n","import styled from 'styled-components/macro'\r\nimport useEditForm from '../hooks/useEditForm'\r\n\r\nexport default function TodoForm({ todo, onSave }) {\r\n  const { formData, handleSubmit, handleChange, resetForm } = useEditForm(\r\n    todo,\r\n    onSave\r\n  )\r\n\r\n  return (\r\n    <Wrapper onSubmit={handleSubmit}>\r\n      <label>\r\n        Description\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Status\r\n        <select name=\"status\" value={formData.status} onChange={handleChange}>\r\n          <option value=\"OPEN\">open</option>\r\n          <option value=\"IN_PROGRESS\">doing</option>\r\n          <option value=\"DONE\">done</option>\r\n        </select>\r\n      </label>\r\n      <button type=\"button\" onClick={resetForm}>\r\n        Reset\r\n      </button>\r\n      <button>Save</button>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.form`\r\n  display: grid;\r\n  grid-gap: 12px;\r\n  place-content: center;\r\n\r\n  input,\r\n  select {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n`\r\n","import { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function useEditForm(todo, onSave) {\r\n  const [formData, setFormData] = useState({\r\n    description: todo.description,\r\n    status: todo.status,\r\n  })\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const updatedTodo = { ...todo, ...formData }\r\n    onSave(updatedTodo).then(() => history.push('/'))\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      description: todo.description,\r\n      status: todo.status,\r\n    })\r\n  }\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target\r\n    setFormData({ ...formData, [name]: value })\r\n  }\r\n\r\n  return { formData, handleSubmit, handleChange, resetForm }\r\n}\r\n","import PageLayout from '../components/PageLayout'\r\nimport Header from '../components/Header'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport { getTodoById } from '../service/todo-api-service'\r\nimport TodoForm from '../components/TodoForm'\r\nimport PropTypes from 'prop-types'\r\n\r\nEditPage.propTypes = {\r\n  onSave: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default function EditPage({ onSave }) {\r\n  const { id } = useParams()\r\n\r\n  const [todo, setTodo] = useState()\r\n\r\n  useEffect(() => {\r\n    getTodoById(id).then(setTodo).catch(console.error)\r\n  }, [id])\r\n\r\n  return (\r\n    <PageLayout>\r\n      <Header />\r\n      {todo ? <TodoForm todo={todo} onSave={onSave} /> : <p>loading</p>}\r\n    </PageLayout>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport {\r\n  deleteTodo,\r\n  getAllTodos,\r\n  postTodo,\r\n  putTodo,\r\n  putUpdatedTodo,\r\n} from './service/todo-api-service'\r\nimport { nextStatus } from './service/todo-service'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\nimport Homepage from './pages/Homepage'\r\nimport DetailsPage from './pages/DetailsPage'\r\nimport BoardPage from './pages/BoardPage'\r\nimport EditPage from './pages/EditPage'\r\n\r\nexport default function App() {\r\n  const [todos, setTodos] = useState([])\r\n\r\n  useEffect(() => {\r\n    getAllTodos()\r\n      .then(todos => setTodos(todos))\r\n      .catch(error => console.error(error))\r\n  }, [])\r\n\r\n  const createNewTodo = description =>\r\n    postTodo(description)\r\n      .then(() => getAllTodos())\r\n      .then(todos => setTodos(todos))\r\n      .catch(error => console.error(error))\r\n\r\n  const advanceTodo = todo => {\r\n    const newTodo = { ...todo, status: nextStatus(todo.status) }\r\n    putTodo(newTodo)\r\n      .then(() => getAllTodos())\r\n      .then(todos => setTodos(todos))\r\n      .catch(error => console.error(error))\r\n  }\r\n\r\n  const removeTodo = id =>\r\n    deleteTodo(id)\r\n      .then(() => getAllTodos())\r\n      .then(todos => setTodos(todos))\r\n      .catch(error => console.error(error))\r\n\r\n  const updateTodo = todo =>\r\n    putUpdatedTodo(todo)\r\n      .then(() => getAllTodos())\r\n      .then(todos => setTodos(todos))\r\n      .catch(error => console.error(error))\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Homepage\r\n            todos={todos}\r\n            advanceTodo={advanceTodo}\r\n            removeTodo={removeTodo}\r\n            createNewTodo={createNewTodo}\r\n          />\r\n        </Route>\r\n        <Route path=\"/board/:statusSlug\">\r\n          <BoardPage\r\n            todos={todos}\r\n            onAdvance={advanceTodo}\r\n            onDelete={removeTodo}\r\n          />\r\n        </Route>\r\n        <Route path=\"/edit/:id\">\r\n          <EditPage onSave={updateTodo} />\r\n        </Route>\r\n        <Route path=\"/details/:id\">\r\n          <DetailsPage />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml, body {\r\n  margin: 0;\r\n  font-family: sans-serif;\r\n}\r\n`\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport GlobalStyle from './GlobalStyle'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}